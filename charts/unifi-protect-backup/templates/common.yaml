{{/* Append the hardcoded settings */}}
{{- define "unifi-protect-backup.harcodedValues" -}}
env:
  {{- if .Values.upb.ufp.existingSecret }}
  {{- if and .Values.upb.ufp.usernameKey .Values.upb.ufp.passwordKey }}
  UFP_USERNAME:
    valueFrom:
      secretKeyRef:
        name: {{ .Values.upb.ufp.existingSecret | quote }}
        key: {{ .Values.upb.ufp.usernameKey | quote }}
  UFP_PASSWORD:
    valueFrom:
      secretKeyRef:
        name: {{ .Values.upb.ufp.existingSecret | quote }}
        key: {{ .Values.upb.ufp.passwordKey | quote }}
  {{- end }}
  {{- else }}
  {{- if .Values.upb.ufp.username }}
  UFP_USERNAME: {{ .Values.upb.ufp.username | quote }}
  {{- end }}
  {{- if .Values.upb.ufp.password }}
  UFP_PASSWORD: {{ .Values.upb.ufp.password | quote }}
  {{- end }}
  {{- end }}

  {{- if .Values.upb.ufp.address }}
  UFP_ADDRESS: {{ .Values.upb.ufp.address | quote }}
  {{- end }}
  {{- if .Values.upb.ufp.port }}
  UFP_PORT: {{ .Values.upb.ufp.port | quote }}
  {{- end }}
  {{- if .Values.upb.ufp.sslVerify }}
  UFP_SSL_VERIFY: {{ .Values.upb.ufp.sslVerify | quote }}
  {{- end }}

  {{- if .Values.upb.rclone.retention }}
  RCLONE_RETENTION: {{ .Values.upb.rclone.retention | quote }}
  {{- end }}
  {{- if .Values.upb.rclone.destination }}
  RCLONE_DESTINATION: {{ .Values.upb.rclone.destination | quote }}
  {{- end }}
  {{- if .Values.upb.rclone.args }}
  RCLONE_ARGS: {{ .Values.upb.rclone.args | quote }}
  {{- end }}
  {{- if .Values.upb.rclone.purgeArgs }}
  RCLONE_PURGE_ARGS: {{ .Values.upb.rclone.purgeArgs | quote }}
  {{- end }}
  {{- if .Values.upb.rclone.parallelUploads }}
  PARALLEL_UPLOADS: {{ .Values.upb.rclone.parallelUploads | quote }}
  {{- end }}

  {{- if .Values.upb.camera.ignore }}
  IGNORE_CAMERAS: {{ .Values.upb.camera.ignore | toJson }}
  {{- end }}
  {{- if .Values.upb.camera.include }}
  CAMERAS: {{ .Values.upb.camera.include | toJson }}
  {{- end }}
  {{- if .Values.upb.detectionTypes }}
  DETECTION_TYPES: {{ .Values.upb.detectionTypes | toJson }}
  {{- end }}

  {{- if .Values.upb.fileStructureFormat }}
  FILE_STRUCTURE_FORMAT: {{ .Values.upb.fileStructureFormat | quote }}
  {{- end }}
  {{- if .Values.upb.sqlitePath }}
  SQLITE_PATH: {{ .Values.upb.sqlitePath | quote }}
  {{- end }}
  {{- if .Values.upb.downloadBufferSize }}
  DOWNLOAD_BUFFER_SIZE: {{ .Values.upb.downloadBufferSize | quote }}
  {{- end }}
  {{- if .Values.upb.downloadRateLimit }}
  DOWNLOAD_RATELIMIT: {{ .Values.upb.downloadRateLimit | quote }}
  {{- end }}
  {{- if .Values.upb.maxEventLength }}
  MAX_EVENT_LENGTH: {{ .Values.upb.maxEventLength | quote }}
  {{- end }}
  {{- if .Values.upb.experimentalDownloader }}
  EXPERIMENTAL_DOWNLOADER: {{ .Values.upb.experimentalDownloader | quote }}
  {{- end }}

  {{- if .Values.upb.colorLogging }}
  COLOR_LOGGING: {{ .Values.upb.colorLogging | quote }}
  {{- end }}
  {{- if .Values.upb.purgeInterval }}
  PURGE_INTERVAL: {{ .Values.upb.purgeInterval | quote }}
  {{- end }}
  {{- if .Values.upb.skipMissing }}
  SKIP_MISSING: {{ .Values.upb.skipMissing | quote }}
  {{- end }}

  {{- if .Values.upb.appriseNotifiers }}
  APPRISE_NOTIFIERS: {{ .Values.upb.appriseNotifiers | toJson }}
  {{- end }}


{{/* Mount Rclone config */}}
{{- if .Values.upb.rclone.existingSecret }}
persistence:
  rclone-config:
    enabled: true
    type: secret
    name: {{ .Values.upb.rclone.existingSecret }}
    mountPath: /config/rclone/rclone.conf
    subPath: {{ .Values.upb.rclone.configKey }}
    readOnly: true
{{- else if .Values.upb.rclone.config }}
configMaps:
  rclone-config:
    enabled: true
    data:
      {{ .Values.upb.rclone.configKey | default "rclone.conf" }}: {{ .Values.upb.rclone.config | quote }}

persistence:
  rclone-config:
    enabled: true
    type: configMap
    name: {{ include "bjw-s.common.lib.chart.names.fullname" . }}-rclone-config
    mountPath: /config/rclone/rclone.conf
    subPath: {{ .Values.upb.rclone.configKey | default "rclone.conf" }}
    readOnly: true
{{- end }}

{{- end -}}
{{- $_ := merge .Values (include "unifi-protect-backup.harcodedValues" . | fromYaml) -}}

{{/* Render the templates */}}
{{ include "bjw-s.common.loader.all" . }}
